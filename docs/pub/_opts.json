{"cli":true,"dir":".","openBrowser":true,"outputOnly":true,"no-watch":true,"no-sockets":true,"editor":true,"user":"jldec","basedir":"/Users/jldec/pub/pkg-prism/example","pkgJson":{"name":"pub-pkg-prism-example","version":"0","description":"-","repository":"-","readme":"-","main":"pub-config.js","author":"Jürgen Leschner","license":"MIT","dependencies":{"pub-pkg-prism":"^2.0.4"},"scripts":{"develop":"pub","generate":"pub -O","static":"pub -S ../docs"}},"pkgName":"pub-pkg-prism-example","sources":[{"path":"/Users/jldec/pub/pkg-prism/README.md","name":"README.md","type":"FILE","watch":{},"fragmentDelim":true,"files":[{"path":"/README.md","text":"---- / ----\nname: README\n\n# pub-pkg-prism\n\n[pub-server](https://github.com/jldec/pub-server) plugin for syntax highlighting with [prism.js](https://github.com/LeaVerou/prism.git) v1.26.\n\nRuns inside pub-generator during markdown processing -- no client-side javascript required.\n\nIncludes language support for markup, css, clike, javascript, c, csharp, cpp, fsharp, go, go-module, handlebars, java, makefile, markdown, markup-templating, perl, php, python, jsx, tsx, ruby, rust, sql, swift, typescript, typoscript, wasm.\n\nA website with some examples can be found at https://jldec.github.io/pub-pkg-prism\n\n### installation\n\nThis package is included with pub-server.\n\nTo enable it, add `pub-pkg-prism` to your pub-config `pkgs`.\n\nMarkdown code blocks will be automatically highlighted by pub-generator using [marked](https://marked.js.org/#/USING_ADVANCED.md#options), synchronously calling prism.hightlight().\n\n## CSS\n\nThis package will inject `/css/prism.css` into your main template provided it includes `{{{injectCss}}}`.\n\n### credits\n\nBased on [prism.js](https://github.com/LeaVerou/prism.git) by Lea Verou - https://github.com/LeaVerou\n"}]},{"path":"/Users/jldec/pub/pkg-prism/example/pages","writable":1,"name":"pages","type":"FILE","tmp":"/Users/jldec/.tmp/pages","watch":{},"fragmentDelim":true,"files":[{"path":"/java.md","text":"---- ----\ntitle: Java\n\n\n### Java\n```java\n\n/*\n * Copyright 2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage io.projectriff.invoker;\n\nimport java.io.IOException;\n\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.cloud.function.deployer.ApplicationBootstrap;\nimport org.springframework.cloud.function.deployer.EnableFunctionDeployer;\n\n/**\n * @author Mark Fisher\n * @author Dave Syer\n */\n@SpringBootApplication\n@EnableFunctionDeployer\npublic class JavaFunctionInvokerApplication {\n\n\tprivate ApplicationBootstrap bootstrap;\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tnew JavaFunctionInvokerApplication().run(args);\n\t}\n\n\tpublic void run(String... args) {\n\t\tif (bootstrap == null) {\n\t\t\tbootstrap = new ApplicationBootstrap();\n\t\t\tbootstrap.run(JavaFunctionInvokerApplication.class, args);\n\t\t}\n\t}\n\n\tpublic void close() {\n\t\tif (bootstrap != null) {\n\t\t\tbootstrap.close();\n\t\t}\n\t}\n\n}\n```"},{"path":"/javascript.md","text":"---- ----\ntitle: JavaScript\n\n### JavaScript\n```js\n/*\n * asyncbuilder\n * simple semi-asynchronous list builder\n * Copyright (c) 2015-2022 Jürgen Leschner - github.com/jldec - MIT license\n*/\n\nmodule.exports = asyncbuilder;\n\nfunction asyncbuilder(mainCallBack) {\n\n  if (!(this instanceof asyncbuilder)) return new asyncbuilder(mainCallBack);\n\n  // private\n  var results = [];\n  var pending = 0;        // number of outstanding results\n  var isComplete = false; // true after complete()\n  var spent = false;      // true after mainCallBack()\n  var asyncErr = null;    // queued async err\n\n  // public\n  this.append = append;\n  this.asyncAppend = asyncAppend;\n  this.complete = complete;\n\n  //--//--//--//--//--//--//--//--//--//\n\n  // append result immediately (no callback required)\n  function append(result) {\n    if (spent) throw new Error('asyncbuilder append after mainCallBack');\n    if (isComplete) {\n      asyncErr = asyncErr || new Error('asyncbuilder append after complete.');\n      return;\n    }\n    results.push(result);\n  }\n\n  // reserve a slot and return a callback(err, result) for async result\n  // the callback inserts the result into the slot (or propagetes any error)\n  function asyncAppend() {\n    if (spent) throw new Error('asyncbuilder asyncAppend after mainCallBack');\n    if (isComplete) {\n      asyncErr = asyncErr || new Error('asyncbuilder asyncAppend after complete.');\n      return function(){};\n    }\n    var slot = results.push('') - 1;\n    pending++;\n    return function(err, result) {\n      pending--;\n      asyncErr = asyncErr || err;\n      results[slot] = result;\n      if (isComplete && !spent && !pending) {\n        spent = true;\n        mainCallBack(asyncErr, results);\n      }\n    };\n  }\n\n  // call ab.complete() after the last append() or asyncAppend()\n  function complete() {\n    isComplete = true;\n    if (!pending && !spent) {\n      spent = true;\n      process.nextTick(function() {\n        mainCallBack(asyncErr, results);\n      });\n    }\n  }\n\n}\n```\n"},{"path":"/markdown.md","text":"---- ----\ntitle: Markdown\n\n\n### Markdown\n```markdown\n### tl;dr\nAll text-content lives in **markdown** fragments inside **text** files in one or more **sources**. Fragments in the same file are separated by a delimiter like\n\n    ---- /page-1 ----\n\n**pub-generator** compiles markdown fragments into javascript objects which are rendered to HTML by applying **handlebars templates**.\n\n\n### sources\nSources are directories in your project or inside a theme package. Source directories are scanned, and new files picked up automatically when the source is read.\n\nHandlebars templates live in files in sources just like markdown text. In fact, templates and markdown may live together in the same source file as long as each is clearly identified e.g. (simplified content)\n\n\n    ---- /page-1 ----\n\n    page1 markdown text...\n\n    ---- /main-layout.hbs ----\n\n    <html>{{{renderPage}}}</html>\n\n\n\n### pages and fragments\nThere are 2 kinds of markdown content:\n\n1. **pages** have a \"normal\" page url or href. e.g. `/pages/about-us`\n2. **fragments** have an href with a fragment #id. e.g. `/blog/2014/year-in-review#conclusions`\n\nThe href may be specified in a header at the top of the markdown like the examples above or derived from the source path: E.g. a file `/md/pages/About Us.md` may become `/pages/about-us` assuming `/md` is the source.\n\nFilenames are turned into urls by slugifying i.e. lowercasing and converting non-alphanumeric characters into hyphens.\n\nIn addition to having an href, all pages and fragments may acquire additional metadata from their markdown headers. E.g to set a title for the home page, add the following at the top of the index.md file.\n\n    ---- / ----\n    title: Introduction\n\n    **pub-server** is a lightweight content management tool for publishing on the web\n\n\n### templates and rendering\npub-server invokes compiled templates to render pages.\n\nPage or fragment objects provide the input \"context\" for handlebars. E.g. If a template contains `{{title}}`, handlebars will look for a `.title` property on the current page or fragment object and insert the value of that property into the html output.\n\nTemplate evaluation is performed in a nested manner\n\n- The outer layout template will include a helper like `{{{renderPage}}}`\n- This invokes an inner page template which may render the page markdown using `{{{html}}}` or it may iterate over page-fragments using a block helper like `{{{#eachFragment}}}...{{{/eachFragment}}}`\n\nTemplates may be explicitly specified. E.g. to use an outer template called `hero` instead of the default 'main-layout', specify `layout:hero` in the markdown header. Similarly, to use a page layout called `flow`, specify `template:flow` in the markdown header.\n\n\n### loading\nBefore rendering (or every time a source is modified) the generator does:\n\n- *read* text files in order from all (or just the modified) sources\n- *pre-process* each file into one or more fragments\n- *compile* .md fragments into arrays of javascript objects\n- *compile* .hbs fragments into handlebars templates\n- *emit* events which can trigger additional processing by plugins\n\nPage-fragments are automatically attached to pages during compilation. This makes it easy for templates to iterate over the fragments in a page during rendering.\n```"},{"path":"/python.md","text":"---- ----\ntitle: Python\n\n\n### Python\n```python\n# Copyright 2015 gRPC authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\"\"\"The base interface of RPC Framework.\n\nImplementations of this interface support the conduct of \"operations\":\nexchanges between two distinct ends of an arbitrary number of data payloads\nand metadata such as a name for the operation, initial and terminal metadata\nin each direction, and flow control. These operations may be used for transfers\nof data, remote procedure calls, status indication, or anything else\napplications choose.\n\"\"\"\n\n# threading is referenced from specification in this module.\nimport abc\nimport enum\nimport threading  # pylint: disable=unused-import\n\nimport six\n\n# abandonment is referenced from specification in this module.\nfrom grpc.framework.foundation import abandonment  # pylint: disable=unused-import\n\n# pylint: disable=too-many-arguments\n\n\nclass NoSuchMethodError(Exception):\n    \"\"\"Indicates that an unrecognized operation has been called.\n\n    Attributes:\n      code: A code value to communicate to the other side of the operation\n        along with indication of operation termination. May be None.\n      details: A details value to communicate to the other side of the\n        operation along with indication of operation termination. May be None.\n    \"\"\"\n\n    def __init__(self, code, details):\n        \"\"\"Constructor.\n\n        Args:\n          code: A code value to communicate to the other side of the operation\n            along with indication of operation termination. May be None.\n          details: A details value to communicate to the other side of the\n            operation along with indication of operation termination. May be None.\n        \"\"\"\n        super(NoSuchMethodError, self).__init__()\n        self.code = code\n        self.details = details\n\n\nclass Outcome(object):\n    \"\"\"The outcome of an operation.\n\n  Attributes:\n    kind: A Kind value coarsely identifying how the operation terminated.\n    code: An application-specific code value or None if no such value was\n      provided.\n    details: An application-specific details value or None if no such value was\n      provided.\n  \"\"\"\n\n    @enum.unique\n    class Kind(enum.Enum):\n        \"\"\"Ways in which an operation can terminate.\"\"\"\n\n        COMPLETED = 'completed'\n        CANCELLED = 'cancelled'\n        EXPIRED = 'expired'\n        LOCAL_SHUTDOWN = 'local shutdown'\n        REMOTE_SHUTDOWN = 'remote shutdown'\n        RECEPTION_FAILURE = 'reception failure'\n        TRANSMISSION_FAILURE = 'transmission failure'\n        LOCAL_FAILURE = 'local failure'\n        REMOTE_FAILURE = 'remote failure'\n\n\nclass Completion(six.with_metaclass(abc.ABCMeta)):\n    \"\"\"An aggregate of the values exchanged upon operation completion.\n\n  Attributes:\n    terminal_metadata: A terminal metadata value for the operaton.\n    code: A code value for the operation.\n    message: A message value for the operation.\n  \"\"\"\n\n\nclass OperationContext(six.with_metaclass(abc.ABCMeta)):\n    \"\"\"Provides operation-related information and action.\"\"\"\n\n    @abc.abstractmethod\n    def outcome(self):\n        \"\"\"Indicates the operation's outcome (or that the operation is ongoing).\n\n    Returns:\n      None if the operation is still active or the Outcome value for the\n        operation if it has terminated.\n    \"\"\"\n        raise NotImplementedError()\n\n    @abc.abstractmethod\n    def add_termination_callback(self, callback):\n        \"\"\"Adds a function to be called upon operation termination.\n\n    Args:\n      callback: A callable to be passed an Outcome value on operation\n        termination.\n\n    Returns:\n      None if the operation has not yet terminated and the passed callback will\n        later be called when it does terminate, or if the operation has already\n        terminated an Outcome value describing the operation termination and the\n        passed callback will not be called as a result of this method call.\n    \"\"\"\n        raise NotImplementedError()\n\n    @abc.abstractmethod\n    def time_remaining(self):\n        \"\"\"Describes the length of allowed time remaining for the operation.\n\n    Returns:\n      A nonnegative float indicating the length of allowed time in seconds\n      remaining for the operation to complete before it is considered to have\n      timed out. Zero is returned if the operation has terminated.\n    \"\"\"\n        raise NotImplementedError()\n\n    @abc.abstractmethod\n    def cancel(self):\n        \"\"\"Cancels the operation if the operation has not yet terminated.\"\"\"\n        raise NotImplementedError()\n\n    @abc.abstractmethod\n    def fail(self, exception):\n        \"\"\"Indicates that the operation has failed.\n\n    Args:\n      exception: An exception germane to the operation failure. May be None.\n    \"\"\"\n        raise NotImplementedError()\n\n\nclass Operator(six.with_metaclass(abc.ABCMeta)):\n    \"\"\"An interface through which to participate in an operation.\"\"\"\n\n    @abc.abstractmethod\n    def advance(self,\n                initial_metadata=None,\n                payload=None,\n                completion=None,\n                allowance=None):\n        \"\"\"Progresses the operation.\n\n    Args:\n      initial_metadata: An initial metadata value. Only one may ever be\n        communicated in each direction for an operation, and they must be\n        communicated no later than either the first payload or the completion.\n      payload: A payload value.\n      completion: A Completion value. May only ever be non-None once in either\n        direction, and no payloads may be passed after it has been communicated.\n      allowance: A positive integer communicating the number of additional\n        payloads allowed to be passed by the remote side of the operation.\n    \"\"\"\n        raise NotImplementedError()\n\n\nclass ProtocolReceiver(six.with_metaclass(abc.ABCMeta)):\n    \"\"\"A means of receiving protocol values during an operation.\"\"\"\n\n    @abc.abstractmethod\n    def context(self, protocol_context):\n        \"\"\"Accepts the protocol context object for the operation.\n\n    Args:\n      protocol_context: The protocol context object for the operation.\n    \"\"\"\n        raise NotImplementedError()\n\n\nclass Subscription(six.with_metaclass(abc.ABCMeta)):\n    \"\"\"Describes customer code's interest in values from the other side.\n\n  Attributes:\n    kind: A Kind value describing the overall kind of this value.\n    termination_callback: A callable to be passed the Outcome associated with\n      the operation after it has terminated. Must be non-None if kind is\n      Kind.TERMINATION_ONLY. Must be None otherwise.\n    allowance: A callable behavior that accepts positive integers representing\n      the number of additional payloads allowed to be passed to the other side\n      of the operation. Must be None if kind is Kind.FULL. Must not be None\n      otherwise.\n    operator: An Operator to be passed values from the other side of the\n      operation. Must be non-None if kind is Kind.FULL. Must be None otherwise.\n    protocol_receiver: A ProtocolReceiver to be passed protocol objects as they\n      become available during the operation. Must be non-None if kind is\n      Kind.FULL.\n  \"\"\"\n\n    @enum.unique\n    class Kind(enum.Enum):\n\n        NONE = 'none'\n        TERMINATION_ONLY = 'termination only'\n        FULL = 'full'\n\n\nclass Servicer(six.with_metaclass(abc.ABCMeta)):\n    \"\"\"Interface for service implementations.\"\"\"\n\n    @abc.abstractmethod\n    def service(self, group, method, context, output_operator):\n        \"\"\"Services an operation.\n\n    Args:\n      group: The group identifier of the operation to be serviced.\n      method: The method identifier of the operation to be serviced.\n      context: An OperationContext object affording contextual information and\n        actions.\n      output_operator: An Operator that will accept output values of the\n        operation.\n\n    Returns:\n      A Subscription via which this object may or may not accept more values of\n        the operation.\n\n    Raises:\n      NoSuchMethodError: If this Servicer does not handle operations with the\n        given group and method.\n      abandonment.Abandoned: If the operation has been aborted and there no\n        longer is any reason to service the operation.\n    \"\"\"\n        raise NotImplementedError()\n\n\nclass End(six.with_metaclass(abc.ABCMeta)):\n    \"\"\"Common type for entry-point objects on both sides of an operation.\"\"\"\n\n    @abc.abstractmethod\n    def start(self):\n        \"\"\"Starts this object's service of operations.\"\"\"\n        raise NotImplementedError()\n\n    @abc.abstractmethod\n    def stop(self, grace):\n        \"\"\"Stops this object's service of operations.\n\n    This object will refuse service of new operations as soon as this method is\n    called but operations under way at the time of the call may be given a\n    grace period during which they are allowed to finish.\n\n    Args:\n      grace: A duration of time in seconds to allow ongoing operations to\n        terminate before being forcefully terminated by the stopping of this\n        End. May be zero to terminate all ongoing operations and immediately\n        stop.\n\n    Returns:\n      A threading.Event that will be set to indicate all operations having\n        terminated and this End having completely stopped. The returned event\n        may not be set until after the full grace period (if some ongoing\n        operation continues for the full length of the period) or it may be set\n        much sooner (if for example this End had no operations in progress at\n        the time its stop method was called).\n    \"\"\"\n        raise NotImplementedError()\n\n    @abc.abstractmethod\n    def operate(self,\n                group,\n                method,\n                subscription,\n                timeout,\n                initial_metadata=None,\n                payload=None,\n                completion=None,\n                protocol_options=None):\n        \"\"\"Commences an operation.\n\n    Args:\n      group: The group identifier of the invoked operation.\n      method: The method identifier of the invoked operation.\n      subscription: A Subscription to which the results of the operation will be\n        passed.\n      timeout: A length of time in seconds to allow for the operation.\n      initial_metadata: An initial metadata value to be sent to the other side\n        of the operation. May be None if the initial metadata will be later\n        passed via the returned operator or if there will be no initial metadata\n        passed at all.\n      payload: An initial payload for the operation.\n      completion: A Completion value indicating the end of transmission to the\n        other side of the operation.\n      protocol_options: A value specified by the provider of a Base interface\n        implementation affording custom state and behavior.\n\n    Returns:\n      A pair of objects affording information about the operation and action\n        continuing the operation. The first element of the returned pair is an\n        OperationContext for the operation and the second element of the\n        returned pair is an Operator to which operation values not passed in\n        this call should later be passed.\n    \"\"\"\n        raise NotImplementedError()\n\n    @abc.abstractmethod\n    def operation_stats(self):\n        \"\"\"Reports the number of terminated operations broken down by outcome.\n\n    Returns:\n      A dictionary from Outcome.Kind value to an integer identifying the number\n        of operations that terminated with that outcome kind.\n    \"\"\"\n        raise NotImplementedError()\n\n    @abc.abstractmethod\n    def add_idle_action(self, action):\n        \"\"\"Adds an action to be called when this End has no ongoing operations.\n\n    Args:\n      action: A callable that accepts no arguments.\n    \"\"\"\n        raise NotImplementedError()\n```"}]},{"path":"/Users/jldec/pub/server/node_modules/pub-pkg-seo/src","fragmentDelim":1,"_pkg":"pub-pkg-seo","name":"src","type":"FILE","watch":false,"files":[{"path":"/pages","text":"---- /robots.txt ----\nnocrawl:1\nnolayout:1\ntemplate:robots.txt\naccess:everyone\n\n---- /sitemap.xml ----\nnocrawl:1\nnolayout:1\ntemplate:sitemap.xml\naccess:everyone\n"},{"path":"/robots.txt.hbs","text":"user-agent: *\n{{#ifOption 'noRobots'}}\ndisallow: /\n{{else}}\nallow: /\n{{/ifOption}}\n"},{"path":"/sitemap.xml.hbs","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\n{{#eachPage~}}\n<url><loc>{{fqurl}}</loc></url>\n{{/eachPage}}\n</urlset>\n"}]},{"path":"/Users/jldec/pub/server/node_modules/pub-theme-doc/templates","_pkg":"pub-theme-doc","name":"templates","type":"FILE","watch":false,"files":[{"path":"/default.hbs","text":"{{{html}}}\n{{#each _fragments~}}\n{{{html}}}\n{{/each}}\n"},{"path":"/doc-layout.hbs","text":"<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n{{{metaSeo}}}\n\n<!-- html generated by pub-server from markdown {{_file.path}} -->\n\n<title>{{title}}</title>\n{{{injectCss}}}\n<!--[if lt IE 9]>\n<script src=\"https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js\"></script>\n<script src=\"https://oss.maxcdn.com/respond/1.4.2/respond.min.js\"></script>\n<![endif]-->\n</head>\n<body>\n\n{{{renderLayout}}}\n\n{{{injectJs}}}\n{{{comment \"copyright\"}}}\n</body>\n</html>\n"},{"path":"/main-layout.hbs","text":"<header>\n<div id=\"doctitle\">{{{docTitle}}}</div>\n<div id=\"topmenu\">{{{topMenu}}}</div>\n</header>\n\n<div id=\"navicon\" onclick=\"\">{{{navIcon}}}\n<nav id=\"toc\">\n<ul>\n{{#eachPage~}}\n<li>{{{pageLink}}}</li>\n{{/eachPage~}}\n</ul>\n</nav>\n</div>\n\n<div id=\"main\" onclick=\"\">\n<div id=\"content\" class=\"markdown-body\">\n{{{renderPage}}}\n</div>\n<div id=\"credit\">{{{credit}}}</div>\n</div>\n"}]},{"path":"/Users/jldec/pub/server/node_modules/pub-pkg-editor/src","writable":true,"_pkg":"pub-pkg-editor","name":"_src","type":"FILE","tmp":"/Users/jldec/.tmp/_src","watch":false,"fragmentDelim":true,"files":[{"path":"/pub-editor-doclayout.hbs","text":"<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\">\n<title>pub {{name}}</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<link rel=\"stylesheet\" href=\"{{relPath}}/pub/css/editor.css\">\n</head>\n<body>\n{{{renderPage}}}\n<script src=\"{{relPath}}/js/jquery-1.12.4.min.js\"></script>\n</body>\n</html>\n"},{"path":"/pub-editor-help.md","text":"---- /pub-editor-help ----\nname: pub Editor\ndoclayout: pub-editor-doclayout\nnopublish: 1\n\n\n## Editing pages with pub server\n\n- **try it out!**  -- you can [edit this page](/pub/editor-help).\n\n- Click on the (E) button (ony visible for Editors) at the top right on the staging server, to open any page for editing in Composer.\n\n- Once open, the (E) changes to an (C) which closes the Composer and returns to normal staging website navigation.\n\n- In composer mode, there are two panes.  \n  The markdown editor on the left  \n  And the preview pane on the right\n\n- You can drag the little round dragger at top of the line separating the panes left and right. Your settings will be remembered across sessions.\n\n- The preview pane can be used to navigate the website, select other pages for editing, and display, in real-time, any changes you make in the editor on the left.\n\n- The website in the preview pane should look and behave just like the normal (staging) website. Click on links to navigate, and even use your browser's back button. The only exceptions are pages which require information from the server e.g. the thank-you pages after submitting a registration or an info request.\n\n- The composer can also be opened by prepending `pub/` to the beginning of the path in the url. E.g. to open this page in composer, go to [/pub/editor-help](/pub/editor-help)\n\n- sometimes if the network is slow, the composer won't work the first time -- navigating to another page by clicking somewhere in the preview should fix it.\n\n## Modifying pages\n\n- click on the editor button (E) at the top right, and wait a second or two for the markdown to appear in the left pane.\n\n- the header section at the top of the markdown in the left pane contains \"meta\" information like (most importantly) the `page:` which is the url path to the page, and the `template:` which defines the type of page.\n\n- below the header section is the \"main\" markdown content for the page.\n\n- edit away..., You should see your changes immediately reflected in the preview pane on the right.\n\n- All changes are saved automatically to the server (no need to click on any save button) but nothing is published to the www website. \n\n- Click on the close button (C) at the top right, to close the composer, and see the change on the staging site.\n\n## Committing changes\n\n- At any time you can click on the ✓ (check symbol) at the top of the left pane.\n\n- you should see a list of all the updated pages or fragments which have not yet been committed.\n\n- Hovering over any one of the updates in the list should show you a bit of what changed (in case you forgot).\n\n- Clicking on one of the updates in the list will present a confirmation prompt. Click on OK to commit or Cancel to go back without comitting.\n\n- Once you commit, it will take a few minutes for the main www server to refresh its pages with those changes (right now the interval is set to 5 min).\n\n## Modifying fragments\n\n- Content like the banner ads, and the bio's on the location pages and the staff page, lives in \"fragments\". These have a `fragment:#fragment-name` header instead of a `page:path` header.\n\n- to edit this, navigate to the page, then click on the **✍** fragment selection pointer (little hand) at the top right and then click anywhere inside the fragment that you want to edit in the preview pane on the right. The markdown for the selected fragment should appear on the left.\n\n## Adding or removing pages\n\n- Contact your web admin for help adding new pages, or changing page urls.\n\n## Uploading images\n\n- For best results, images should be sized at 2x the desired pixel width and height and then given explicit width and height dimensions (1/2 of the actual) when inserted. See [composer markdown extensions](#composer-markdown-extensions)  below for more details\n\n- To upload an image, click on the ☰ button at the top left. This will open a little uploader form which you can browse your file system for the image that you want to upload (drag and drop not supported yet sorry). After uploading you should see the image below the form together with a markdown snippet for the image, and the image URL.\n\n- The uploader will rename the image file with just lowercase and hyphens, but please use meaningful file names for your images before uploading them, so that someone looking at all the image files, can recognize what it is.\n\n- Usually you will copy the markdown snippet and paste it somewhere into the markdown editor. Note that inside markdown, you don't need the fully qualified image source url, just start the image url or link with `/images/...`\n\n# Markdown\n\nEditor supports [github flavored markdown](https://help.github.com/articles/github-flavored-markdown/).\n\n### Paragraphs and line breaks\nSimply leave a blank line between paragraphs. To force a line break put 2 spaces at the end.  \nlike so.  \ndone.\n\n### links and images\n\nIn general links have the form `[text](url \"title\")`\n\nLinks within the website don't require any [text] if the page has a name e.g. `[](/contact-fmc)` will become [](/contact-fmc).\n\nAlso, if the url starts with http:// or https:// and you want to show the url in the resulting page, you can just include it inline in the text without wrapping it in `[]()`\n\nMarkdown for images looks just like markdown for links with a `!` in front  \nE.g. `![jurgen's kids a few years ago](/images/gmail-logo-1.gif)`  \n![jurgen's kids a few years ago](/images/gmail-logo-1.gif)\n\nIf you want an image which links to another page, you put the image markdown inside the text part of the link markdown like this.  \n`[![Image](image-src)](link-url)`\n\n### Editor markdown extensions\nMost of these extensions work by recognising patterns in the `[]( \"title\")` part of the link markdown i.e the part in `\"\"` after the url.\n\n- Use `^` to force a link to open in a new window E.g. `[](/help \"^\")` [](/help \"^\")\n\n- Note: \"Fully qualified\" links (which include `https://servername/...`) automatically open in a new tab/window. E.g.  \n`[google](https://www.google.com)` opens a new window on\n[google](https://www.google.com)\n\n- The link title part of the image markdown can be used for `WxH` sizing or `name=value` attributes. E.g.  \n`\"align=right\"` ![](/images/gmail-logo-1.gif \"align=right\")  \n`\"width=32\"` ![](/images/gmail-logo-1.gif \"width=32\")  \n`\"12x12\" `![](/images/gmail-logo-1.gif \"12x12\")\n\n### Markdown inline formatting\n- **BOLD**\n- *ITALIC*\n- ***BOLD AND ITALIC***\n- ~~STRIKE-THRU~~\n- `quoted-text with <> tags`\n\n\n    quoted\n    paragraph\n    spanning multiple lines\n\n\n# h1 level heading\n## h2 level heading\n### h3 level heading\n#### h4 level heading\n\n### lists\n\n- bullet list\n- bullet list\n  - sub-bullet\n  - sub-bullet\n    - sub-sub-bullet\n    - sub-sub-bullet\n\n\n1. numbered list\n   1. sub-point\n   2. sub-point\n    3. sub-sub-point\n2. numbered list\n3. numbered list\n\n* * * \nUse `* * *` on a separate line for horizontal rules \n\n---\n\n### tables\n\nGFM tables use `|` to separate columns\n\n    | Left-Aligned  | Center Aligned  | Right Aligned |\n    | :------------ |:---------------:| -----:|\n    | col 3 is      | some wordy text | $1600 |\n    | col 2 is      | centered        |   $12 |\n    | zebra stripes | are neat        |    $1 |\n\nbecomes...\n\n| Left-Aligned  | Center Aligned  | Right Aligned |\n| :------------ |:---------------:| -----:|\n| col 3 is      | some wordy text | $1600 |\n| col 2 is      | centered        |   $12 |\n| zebra stripes | are neat        |    $1 |\n\n...\n---\n\nHere's a [Markdown cheatsheet](https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet) with more information about things like tables.\n\nAnd here's some [more background](/help/markdown-motivation) on the motivations behind markdown\n\n![](/images/2016-05-07-13.43.19.jpg \"width=100\")\n"},{"path":"/pub-editor-updates.hbs","text":"<div class=\"editorupdates\">\n<h3>{{name}}</h3>\n<ul class=\"difflist\">\n{{#each diffs}}\n<li title=\"Click to open in editor.{{difftext}}\" data-file=\"{{file}}\" data-href=\"{{diffpage}}\" class=\"difflistitem\">\n  <span class=\"diffrevert\" title=\"Click to revert changes (will trigger editor reload.)\">𐄂</span>\n  <span class=\"diffcommit\" title=\"Click to commit and publish changes.\">✔︎</span>\n  {{difffragments}}\n</li>\n{{/each}}\n</ul>\n</div>\n"},{"path":"/pub-editor-upload.hbs","text":"<div class=\"upload\">\n<h3>{{name}}</h3>\n<form method=\"POST\" enctype=\"multipart/form-data\" action=\"/admin/pub-editor-upload\">\n{{{html}}}\n</form>\n{{#eachUpload}}<pre>![](/images/{{{name}}}){{s3Err}}\n</pre>\n<img src=\"{{opts 'fqImages'}}/images/{{name}}\"><br>\n{{opts 'fqImages'}}/images/{{name}}\n{{/eachUpload}}\n</div>\n"},{"path":"/pub-editor.hbs","text":"<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\">\n<title>pub editor</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<link rel=\"stylesheet\" href=\"{{relPath}}/pub/css/editor.css\">\n<link rel=\"stylesheet\" href=\"{{relPath}}/pub/humane-js/flatty.css\">\n</head>\n<body>\n<div class=\"handle leftright\"></div>\n\n<div class=\"outer col\">\n\n<div class=\"header row\">\n  <div class=\"menubutton col clickable\" title=\"upload images\"> ☰ </div>\n  <div class=\"commitbutton col clickable\" title=\"List changes and commit\"> ✔︎ </div>\n  <div class=\"name col\"></div>\n  <div class=\"editbutton col clickable\" title=\"fragments\"> ✍ </div>\n  <div class=\"helpbutton col clickable\" title=\"help\"> ? </div>\n</div>\n\n<div class=\"main row\">\n  <div class=\"editorpane left col\">\n    <div class=\"updateslist row shadow\"></div>\n    <iframe class=\"uploadsform row shadow\" src=\"{{relPath}}/admin/pub-editor-upload\"></iframe>\n    <textarea class=\"editor row\"></textarea></div>\n  <div class=\"previewpane right col\"><iframe class=\"preview\" src=\"{{relPath}}{{route}}\"></iframe></div>\n</div>\n\n</div>\n<script>window.pubRef = {\"href\":\"{{editorPrefix}}/\",\"relPath\":\"{{relPath}}\"};</script>\n<script src=\"{{relPath}}/js/jquery-1.12.4.min.js\"></script>\n<script src=\"{{relPath}}/pub/js/editor-ui.js\"></script>\n<script src=\"{{relPath}}/pub/_generator.js\"></script>\n\n</body>\n</html>\n"},{"path":"/pub-editor.md","text":"---- /pub/ ----\nname: pub-server\ndoclayout: pub-editor\nnocrawl: 1\n\n\n---- /admin/pub-editor-upload ----\nname: Upload Images\ntemplate: pub-editor-upload\ndoclayout: pub-editor-doclayout\npostandget: 1\nnocrawl: 1\n\n[?file?](upload)\n[?submit? Upload](-)  \n[Markdown will appear below. ?label?](- \"instructions\")\n"}]}],"staticPaths":[{"path":"/Users/jldec/pub/pkg-prism/example/.gitignore","watch":{}},{"path":"/Users/jldec/pub/pkg-prism/example/.nojekyll","watch":{}},{"path":"/Users/jldec/pub/pkg-prism/example/CNAME","watch":{}},{"path":"/Users/jldec/pub/server/node_modules/pub-pkg-jquery/js/jquery-1.12.4.min.js","route":"/js","inject":true,"maxAge":"30d","_pkg":"pub-pkg-jquery","watch":false},{"path":"/Users/jldec/pub/pkg-prism/css/prism.css","route":"/css","inject":true,"_pkg":"/Users/jldec/pub/pkg-prism","watch":false},{"path":"/Users/jldec/pub/server/node_modules/github-markdown-css/github-markdown.css","route":"/css","inject":true,"_pkg":"pub-theme-doc","watch":false},{"path":"/Users/jldec/pub/server/node_modules/pub-theme-doc/css/pub-theme-doc.css","route":"/css","inject":true,"_pkg":"pub-theme-doc","watch":false},{"path":"/Users/jldec/pub/server/node_modules/pub-pkg-font-awesome/fonts","route":"/fonts","_pkg":"pub-pkg-font-awesome","watch":false},{"path":"/Users/jldec/pub/server/node_modules/pub-pkg-font-awesome/css/font-awesome.css","route":"/css","inject":true,"_pkg":"pub-pkg-font-awesome","watch":false},{"path":"/Users/jldec/pub/server/node_modules/pub-pkg-editor/static/css","route":"/pub/css","_pkg":"pub-pkg-editor","watch":false},{"path":"/Users/jldec/pub/server/node_modules/humane-js/themes/flatty.css","route":"/pub/humane-js","_pkg":"pub-pkg-editor","watch":false}],"outputs":[{"path":"/Users/jldec/pub/pkg-prism/docs","relPaths":1,"name":"docs","output":true,"writable":true,"type":"FILE","tmp":"/Users/jldec/.tmp/docs","watch":{}}],"browserScripts":[{"path":"/Users/jldec/pub/server/node_modules/pub-pkg-editor/client/editor-ui.js","route":"/pub/js/editor-ui.js","_pkg":"pub-pkg-editor"},{"path":"/Users/jldec/pub/server/node_modules/pub-preview/pub-preview.js","route":"/pub/js/pub-preview.js","_pkg":"pub-pkg-editor"}],"generatorPlugins":[{"path":"/Users/jldec/pub/server/node_modules/pub-pkg-editor/generator-plugin.js","_pkg":"pub-pkg-editor"},{"path":"/Users/jldec/pub/server/node_modules/pub-pkg-font-awesome/generator-plugin.js","_pkg":"pub-pkg-font-awesome"},{"path":"/Users/jldec/pub/server/node_modules/pub-theme-doc/plugins/generator-plugin.js","_pkg":"pub-theme-doc"},{"path":"/Users/jldec/pub/server/node_modules/pub-pkg-seo/generator-plugin.js","_pkg":"pub-pkg-seo"},{"path":"/Users/jldec/pub/pkg-prism/generator-plugin.js","_pkg":"/Users/jldec/pub/pkg-prism"}],"serverPlugins":[],"injectCss":[{"path":"/css/prism.css"},{"path":"/css/github-markdown.css"},{"path":"/css/pub-theme-doc.css"},{"path":"/css/font-awesome.css"}],"injectJs":[{"path":"/js/jquery-1.12.4.min.js"},{"path":"/pub/pub-ux.js"}],"pkgs":[{"path":"pub-pkg-jquery","pkgJson":{"name":"pub-pkg-jquery","version":"1.12.4","description":"pub-server package to inject jQuery","main":"pub-config.js","dependencies":{},"keywords":["publish","jquery"],"repository":{"type":"git","url":"git://github.com/jldec/pub-pkg-jquery.git"},"author":"jurgen leschner","license":"MIT"},"pkgName":"pub-pkg-jquery","dir":"/Users/jldec/pub/server/node_modules/pub-pkg-jquery"},{"path":"/Users/jldec/pub/pkg-prism","pkgJson":{"name":"pub-pkg-prism","version":"2.0.5","description":"pub-server plugin for v1.26 of prism.js syntax highlighting","main":"pub-config.js","dependencies":{},"files":["css/","js/","generator-plugin.js","pub-config.js","LICENSE-PRISM"],"keywords":["publish","syntax","highlight","prism"],"repository":{"type":"git","url":"git://github.com/jldec/pub-pkg-prism.git"},"author":"Jürgen Leschner","license":"MIT"},"pkgName":"pub-pkg-prism","dir":"/Users/jldec/pub/pkg-prism"},{"path":"pub-pkg-seo","pkgJson":{"name":"pub-pkg-seo","version":"1.2.1","description":"pub-server package for generating robots.txt and sitemap.xml","main":"pub-config.js","dependencies":{},"devDependencies":{"eslint":"^7.32.0","pub-generator":"^4.3.0","pub-resolve-opts":"^1.9.3","pub-src-fs":"^2.1.2","tape":"^5.3.1"},"files":["pub-config.js","generator-plugin.js","src/"],"keywords":["publish","seo","robots","sitemap"],"repository":{"type":"git","url":"git://github.com/jldec/pub-pkg-seo.git"},"scripts":{"test":"eslint . && tape test/norobots/norobots.test.js && tape test/yesrobots/yesrobots.test.js && tape test/canonical/canonical.test.js"},"author":"Jürgen Leschner","license":"MIT"},"pkgName":"pub-pkg-seo","dir":"/Users/jldec/pub/server/node_modules/pub-pkg-seo"},{"path":"pub-theme-doc","pkgJson":{"name":"pub-theme-doc","version":"1.1.14","description":"pub-server documentation theme","main":"pub-config.js","dependencies":{"github-markdown-css":"^4.0.0"},"files":["css/","plugins/","templates/","pub-config.js"],"keywords":["publish","markdown","documentation"],"repository":{"type":"git","url":"git://github.com/jldec/pub-theme-doc.git"},"author":"Jürgen Leschner","license":"MIT"},"pkgName":"pub-theme-doc","dir":"/Users/jldec/pub/server/node_modules/pub-theme-doc"},{"path":"pub-pkg-font-awesome","pkgJson":{"name":"pub-pkg-font-awesome","version":"3.0.5","description":"Use Font Awesome v4.7.0 glyphs from pub-server markdown","main":"pub-config.js","dependencies":{},"devDependencies":{},"files":["css/","fonts/","pub-config.js","generator-plugin.js"],"keywords":["publish","markdown","icon","font","awesome"],"repository":{"type":"git","url":"git://github.com/jldec/pub-pkg-font-awesome.git"},"scripts":{"readme":"pub","docedit":"pub docs-src","docout":"pub -O docs-src","docview":"pub -S docs"},"author":"Font Awesome by Dave Gandy - http://fontawesome.io","license":"MIT AND OFL-1.1"},"pkgName":"pub-pkg-font-awesome","dir":"/Users/jldec/pub/server/node_modules/pub-pkg-font-awesome"},{"path":"pub-pkg-editor","pkgJson":{"name":"pub-pkg-editor","version":"2.0.3","description":"simple markdown editor for pub-server","main":"pub-config.js","dependencies":{"humane-js":"^3.2.2","pub-preview":"^1.3.7"},"devDependencies":{},"files":["client/","src/","static/","pub-config.js","generator-plugin.js"],"repository":{"type":"git","url":"git://github.com/jldec/pub-pkg-editor.git"},"author":"Jürgen Leschner","license":"MIT"},"pkgName":"pub-pkg-editor","dir":"/Users/jldec/pub/server/node_modules/pub-pkg-editor"}],"appUrl":"https://jldec.github.io/pub-pkg-prism","docTitle":"pub-pkg-prism","github":"https://github.com/jldec/pub-pkg-prism","copyright":"Copyright (c) 2015-2022 Jürgen Leschner - github.com/jldec - MIT license","noRobots":1,"linkNewWindow":1,"editorPrefix":"/pub","theme":{"path":"pub-theme-doc","pkgJson":{"name":"pub-theme-doc","version":"1.1.14","description":"pub-server documentation theme","main":"pub-config.js","dependencies":{"github-markdown-css":"^4.0.0"},"files":["css/","plugins/","templates/","pub-config.js"],"keywords":["publish","markdown","documentation"],"repository":{"type":"git","url":"git://github.com/jldec/pub-theme-doc.git"},"author":"Jürgen Leschner","license":"MIT"},"pkgName":"pub-theme-doc","dir":"/Users/jldec/pub/server/node_modules/pub-theme-doc"},"_resolved":true,"production":false,"port":"3001","fqImages":"","staticHost":true}